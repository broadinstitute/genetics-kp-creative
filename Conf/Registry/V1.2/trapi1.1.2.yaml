openapi: 3.0.1
info:
  contact:
    email: mduby@broadinstitute.org
    name: Marc Duby
    url: https://github.com/broadinstitute/genetics-kp-dev
  description: The Translator API for Creative Server of the Genetic Disease Asociation
  termsOfService: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Creative Genetics Provider KP
  version: 1.2.0
  x-reasoner_standard_version: 1.2.0
  x-translator:
    component: KP
    team:
      - Genetics Provider
  x-trapi:
    version 1.2.0
servers:
- url: https://translator.broadinstitute.org/genetics_provider_creative/trapi/v1.2
  environment: prod
tags:
- name: 1.0.0
- name: translator
  description: Creative KP for the Genetics Provider team, providing genetic association statistics
- name: x-translator
- name: trapi
- name: metadata
- name: query 
paths:
  /predicates:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  additionalProperties:
                    description: Array of predicates
                    items:
                      type: string
                    type: array
                  description: Target map
                  type: object
                description: Source map
                example:
                  biolink:Gene:
                    biolink:Disease:
                    - biolink:gene_associated_with_condition
                type: object
          description: Predicates by source and target
      summary: Get Genetics Provider supported relationships by source and target
      tags:
      - predicates
      - 1.0.0
  /query:
    post:
      description: ''
      operationId: query
      requestBody:
        content:
          application/json:
            example:
              message:
                query_graph:
                  edges:
                    e00:
                      object: n01
                      subject: n00
                      predicate: biolink:gene_associated_with_condition
                  nodes:
                    n00:
                      category: biolink:Gene
                      id: NCBIGene:1803
                    n01:
                      category: biolink:Disease
            schema:
              $ref: '#/components/schemas/Query'
        description: Query information to be submitted
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: OK. There may or may not be results. Note that some of the
            provided identifiers may not have been recognized.
        '400':
          content:
            application/json:
              schema:
                type: string
          description: Bad request. The request is invalid according to this OpenAPI
            schema OR a specific identifier is believed to be invalid somehow (not
            just unrecognized).
        '500':
          content:
            application/json:
              schema:
                type: string
          description: Internal server error.
        '501':
          content:
            application/json:
              schema:
                type: string
          description: Not implemented.
      summary: Query Genetics Provider TRAPI API as KP
      tags:
      - query
      - 1.0.0
      x-swagger-router-controller: swagger_server.controllers.query_controller
components:
  schemas:
    BiolinkEntity:
      description: A subclass of named_thing (snake_case)
      example: disease
      externalDocs:
        description: Biolink model entities
        url: https://biolink.github.io/biolink-model/docs/NamedThing.html
      type: string
    BiolinkRelation:
      description: A relation, i.e. child of related_to (snake_case)
      example: affects
      externalDocs:
        description: Biolink model relations
        url: https://biolink.github.io/biolink-model/docs/related_to.html
      type: string
    Credentials:
      description: Credentials needed for programmatic access to the remote knowledge
        graph
      properties:
        password:
          description: Password needed for programmatic access to the remote knowledge
            graph
          type: string
        username:
          description: Username needed for programmatic access to the remote knowledge
            graph
          type: string
      required:
      - username
      - password
      type: object
    EdgeBinding:
      properties:
        kg_id:
          oneOf:
          - type: string
          - items:
              type: string
            type: array
        qg_id:
          type: string
      required:
      - qg_id
      - kg_id
      type: object
    KEdge:
      description: An edge in the thought subgraph linking two nodes
      properties:
        id:
          description: Local identifier for this node which is unique within this
            KnowledgeGraph, and perhaps within the source reasoner's knowledge graph
          example: '553903'
          type: string
        source_id:
          description: Corresponds to the @id of source node of this edge
          example: https://omim.org/entry/603903
          type: string
        target_id:
          description: Corresponds to the @id of target node of this edge
          example: https://www.uniprot.org/uniprot/P00738
          type: string
        type:
          $ref: '#/components/schemas/BiolinkRelation'
      required:
      - id
      - source_id
      - target_id
      type: object
    KNode:
      description: A node in the thought subgraph
      properties:
        id:
          description: CURIE identifier for this node
          example: OMIM:603903
          type: string
        name:
          description: Formal name of the entity
          example: Haptoglobin
          type: string
        type:
          description: Entity type of this node (e.g., protein, disease, etc.)
          example:
          - protein
          items:
            type: string
          type: array
      required:
      - id
      type: object
    KnowledgeGraph:
      description: A thought graph associated with this result. This will commonly
        be a linear path subgraph from one concept to another, but related items aside
        of the path may be included.
      properties:
        edges:
          description: List of edges in the KnowledgeGraph
          items:
            $ref: '#/components/schemas/KEdge'
          type: array
        nodes:
          description: List of nodes in the KnowledgeGraph
          items:
            $ref: '#/components/schemas/KNode'
          type: array
      required:
      - nodes
      - edges
      type: object
    LogEntry:
      properties:
        code:
          description: One of a standardized set of short codes e.g. QueryNotTraversable,
            KPNotAvailable, KPResponseMalformed
          type: string
        level:
          description: Logging level
          enum:
          - ERROR
          - WARNING
          - INFO
          - DEBUG
          type: string
        message:
          description: A human-readable log message
          type: string
        timestamp:
          description: Timestamp in ISO 8601 format
          example: '2020-09-03T18:13:49+00:00'
          format: date-time
          type: string
      type: object
    Message:
      properties:
        knowledge_graph:
          description: KnowledgeGraph object that contains all the nodes and edges
            referenced in any of the possible answers to the query OR connection information
            for a remote knowledge graph
          oneOf:
          - $ref: '#/components/schemas/KnowledgeGraph'
          - $ref: '#/components/schemas/RemoteKnowledgeGraph'
          type: object
        query_graph:
          $ref: '#/components/schemas/QueryGraph'
          description: QueryGraph object that contains a serialization of a query
            in the form of a graph
          type: object
        results:
          description: List of all returned potential answers for the query posed
          items:
            $ref: '#/components/schemas/Result'
          type: array
      type: object
    NodeBinding:
      properties:
        kg_id:
          oneOf:
          - type: string
          - items:
              type: string
            type: array
        qg_id:
          type: string
      required:
      - qg_id
      - kg_id
      type: object
    QEdge:
      description: An edge in the QueryGraph
      properties:
        id:
          description: 'QueryGraph internal identifier for this QEdge. Recommended
            form: e00, e01, e02, etc.'
          example: e00
          type: string
        source_id:
          description: Corresponds to the @id of source node of this edge
          type: string
        target_id:
          description: Corresponds to the @id of target node of this edge
          type: string
        type:
          oneOf:
          - $ref: '#/components/schemas/BiolinkRelation'
          - items:
              $ref: '#/components/schemas/BiolinkRelation'
            type: array
      required:
      - id
      - source_id
      - target_id
      type: object
    QNode:
      description: A node in the QueryGraph
      properties:
        curie:
          description: CURIE identifier for this node
          example: OMIM:603903
          oneOf:
          - type: string
          - items:
              type: string
            type: array
        id:
          description: 'QueryGraph internal identifier for this QNode. Recommended
            form: n00, n01, n02, etc.'
          example: n00
          type: string
        type:
          oneOf:
          - $ref: '#/components/schemas/BiolinkEntity'
          - description: Entity types of this node (e.g., protein, disease, etc.)
            example:
            - disease
            - genetic_condition
            items:
              $ref: '#/components/schemas/BiolinkEntity'
            type: array
      required:
      - id
      type: object
    Query:
      properties:
        message:
          $ref: '#/components/schemas/Message'
      required:
      - message
      type: object
      x-body-name: request_body
    QueryGraph:
      description: A graph intended to be the thought path to be followed by a reasoner
        to answer the question. This graph is a representation of a question.
      properties:
        edges:
          description: List of edges in the QueryGraph
          items:
            $ref: '#/components/schemas/QEdge'
          type: array
        nodes:
          description: List of nodes in the QueryGraph
          items:
            $ref: '#/components/schemas/QNode'
          type: array
      required:
      - nodes
      - edges
      type: object
    RemoteKnowledgeGraph:
      description: A thought graph associated with this result that is not repeated
        here, but stored elsewhere in a way that can be remotely accessed by the reader
        of this Message
      properties:
        credentials:
          $ref: '#/components/schemas/Credentials'
          description: Credentials needed for programmatic access to the remote knowledge
            graph
          type: object
        url:
          description: URL that provides programmatic access to the remote knowledge
            graph
          example: http://robokop.renci.org/api/kg
          type: string
      required:
      - url
      - credentials
      type: object
    Response:
      description: The Response object contains the main payload when a TRAPI query
        endpoint interprets and responds to the submitted query successfully (i.e.,
        HTTP Status Code 200). The message property contains the knowledge of the
        response (query graph, knowledge graph, and results). The status, description,
        and logs properties provide additional details about the response.
      properties:
        description:
          description: A brief human-readable description of the outcome
          example: Success. 42 results found.
          type: string
        logs:
          description: Log entries containing errors, warnings, debugging information,
            etc
          items:
            $ref: '#/components/schemas/LogEntry'
          type: array
        message:
          $ref: '#/components/schemas/Message'
          description: Contains the knowledge of the response (query graph, knowledge
            graph, and results).
        status:
          description: One of a standardized set of short codes, e.g. Success, QueryNotTraversable,
            KPsNotAvailable
          example: Success
          type: string
      required:
      - message
      type: object
    Result:
      description: One of potentially several results or answers for a query
      properties:
        edge_bindings:
          description: List of QEdge-KEdge bindings.
          items:
            $ref: '#/components/schemas/EdgeBinding'
          type: array
        node_bindings:
          description: List of QNode-KNode bindings.
          items:
            $ref: '#/components/schemas/NodeBinding'
          type: array
        score:
          description: Any type of score associated with this result
          example: 163.233
          format: float
          type: number
      required:
      - node_bindings
      - edge_bindings
      type: object
